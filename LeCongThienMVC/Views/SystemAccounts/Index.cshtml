@model FUnewsDTO.PagedListViewModel<FUnewsDTO.SystemAccountDTO>

@{
    ViewData["Title"] = "Manage Accounts";
}

<div class="container mt-5">
    <h2 class="mb-4 text-primary">
         @ViewData["Title"]
    </h2>

    
    <div class="mb-3 text-end">
        <a asp-action="Create" class="btn btn-success d-inline-flex align-items-center shadow-sm">
            <i class="bi bi-plus-circle me-1"></i> Create New
        </a>
    </div>

    <form method="get" class="mb-3 d-flex gap-2 align-items-center">

        <input type="text"
               name="searchTerm"
               class="form-control me-2"
               placeholder="Search by name or email..."
               value="@ViewBag.CurrentSearch" />

        <select name="sortField" class="form-select me-2">
            <option value="AccountName" selected="@(ViewBag.CurrentSortField == "AccountName" ? "selected" : null)">Name</option>
            <option value="AccountEmail" selected="@(ViewBag.CurrentSortField == "AccountEmail" ? "selected" : null)">Email</option>
            <option value="AccountRole" selected="@(ViewBag.CurrentSortField == "AccountRole" ? "selected" : null)">Role</option>
        </select>

        <select name="sortDirection" class="form-select me-2">
            <option value="asc" selected="@(ViewBag.CurrentSortDirection == "asc" ? "selected" : null)">Ascending</option>
            <option value="desc" selected="@(ViewBag.CurrentSortDirection == "desc" ? "selected" : null)">Descending</option>
        </select>

        <button type="submit" class="btn btn-primary">Search</button>
    </form>


    <div class="table-responsive">
        <table class="table table-bordered table-striped table-hover shadow-sm rounded">
            <thead class="table-dark">
                <tr>
                    <th>📝 Full Name</th>
                    <th>✉️ Email</th>
                    <th>🏷️ Role</th>
                    <th style="width: 160px;">⚙️ Actions</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var account in Model.Items)
                {
                    <tr>
                        <td>@account.AccountName</td>
                        <td>@account.AccountEmail</td>
                        <td>
                            @(account.AccountRole switch
                            {
                                1 => "Staff",
                                2 => "Lecture",
                                _ => "Unknown"
                            })
                        </td>
                        @* <td>
                            <a asp-action="Edit" asp-route-id="@account.AccountId" class="btn btn-sm btn-warning me-1">
                                <i class="fas fa-edit"></i> Edit
                            </a>
                            <a asp-action="Delete" asp-route-id="@account.AccountId" class="btn btn-sm btn-danger">
                                <i class="fas fa-trash-alt"></i> Delete
                            </a>
                        </td> *@
                        <td class="text-center">
                            <a asp-action="Edit" asp-route-id="@account.AccountId" class="btn btn-sm btn-outline-primary me-1 shadow-sm d-inline-flex align-items-center">
                                <i class="bi bi-pencil-square me-1"></i> Edit
                            </a>
                            <a asp-action="Delete" asp-route-id="@account.AccountId" class="btn btn-sm btn-outline-danger shadow-sm d-inline-flex align-items-center"
                               >
                                <i class="bi bi-trash me-1"></i> Delete
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <nav>
            <ul class="pagination">
                @{
                    int totalPages = (int)Math.Ceiling((double)Model.TotalCount / Model.PageSize);
                }

                <li class="page-item @(Model.PageNumber == 1 ? "disabled" : "")">
                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber - 1)" asp-route-pageSize="@Model.PageSize">Previous</a>
                </li>

                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(Model.PageNumber == i ? "active" : "")">
                        <a class="page-link" asp-action="Index" asp-route-pageNumber="@i" asp-route-pageSize="@Model.PageSize">@i</a>
                    </li>
                }

                <li class="page-item @(Model.PageNumber == totalPages ? "disabled" : "")">
                    <a class="page-link" asp-action="Index" asp-route-pageNumber="@(Model.PageNumber + 1)" asp-route-pageSize="@Model.PageSize">Next</a>
                </li>
            </ul>
        </nav>

    </div>
</div>

@section Styles {
    <style>
        .table th, .table td {
            vertical-align: middle;
        }

        .btn i {
            margin-right: 4px;
        }

        .table {
            background-color: white;
        }
    </style>
}
